#ref
# https://en.wikipedia.org/wiki/IA-32
# https://en.wikipedia.org/wiki/X86-64
# https://en.wikipedia.org/wiki/Physical_Address_Extension

ifeq ($(OS),Windows_NT)

SCC_OS=WIN
ifeq ($(PROCESSOR_ARCHITECTURE),x86)
SCC_ARCH=X86-32
endif
ifeq ($(PROCESSOR_ARCHITECTURE),AMD64)
SCC_ARCH=X86-64
endif
ifeq ($(PROCESSOR_ARCHITECTURE),WIN64)
SCC_ARCH=X86-64
endif
else
UNAME_S := $(shell uname -s)
ifeq ($(UNAME_S),Linux)
SCC_OS=LNX
endif
ifeq ($(UNAME_S),Darwin)
SCC_OS=OSX
endif
ifeq ($(UNAME_S),TccOS)
SCC_OS=SCCOS
endif
UNAME_P := $(shell uname -p)
UNAME_M := $(shell uname -m)
ifneq ($(filter %86,$(UNAME_P)),)
SCC_ARCH=X86-32
endif
ifeq ($(UNAME_M),x86_64)
SCC_ARCH=X86-64
endif
ifneq ($(filter arm%,$(UNAME_P)),)
#TODO arm... 32/64
SCC_ARCH=ARM-32
endif
ifneq ($(filter aarch64%,$(UNAME_m)),)
SCC_ARCH=ARM-64
endif
endif

